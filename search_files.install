<?php
// $Id: search_files.install,v 1.10.2.14 2009/08/24 01:05:28 jrglasgow Exp $

/**
 * @file
 * Installation and update procedures for the search_files module.
 */

function search_files_schema() {
  $schema['search_files_helpers'] = array(
    'description' => t('list of programs that translate the file to test to be indexed'),
    'fields' => array(
      'id' => array('type' => 'serial', 'not null' => TRUE, 'disp-width' => '11'),
      'name' => array('type' => 'varchar', 'length' => '50', 'not null' => FALSE),
      'extension' => array('type' => 'varchar', 'length' => '10', 'not null' => FALSE),
      'helper_path' => array('type' => 'varchar', 'length' => '255', 'not null' => FALSE),
    ),
    'indexes' => array(
      'id' => array('id')
    ),
  );

  return $schema;
}

function search_files_install() {
  drupal_install_schema('search_files');

  //change variable search_cron_limit to 10 so cron doesn't keep timing out
  if (variable_get('search_cron_limit', 100) > 10) {
    variable_set('search_cron_limit', 10);
    drupal_set_message(t('Your search cron limit, which limits the number of items searched per cron run, has been set to 10. If it had been left at the default 100 your cron jobs could potentially continuously timeout. If you want to change this back you can do so <a href="!link">here</a>', array('!link' => url('admin/settings/search'))));
  }
}

/* http://drupal.org/node/114774#update-n
 */
function search_files_update_6200() {
  $ret = array();
  return $ret;
}

function search_files_update_6201() {
  $ret = array();

  /* rename variables */
  search_files_variable_rename_ifexists('search_files_cron_limit', 'search_cron_limit');

  return $ret;
}

function search_files_update_6202() {
  $ret = array();

  db_change_field($ret,
      'search_files_helpers', 'helper_path', 'helper_path',
      array('type' => 'varchar', 'length' => '255', 'not null' => TRUE)
  );
  return $ret;
}

/* rename table if it exists, otherwise skip silently */
function search_files_db_rename_table_ifexists(&$ret, $table, $new_name) {
  if (db_table_exists($table)) {
    db_rename_table($ret, $table, $new_name);
  }
}

/* rename column if it exists, otherwise skip silently */
function search_files_db_rename_column_ifexists(&$ret, $table, $column, $new_name, $spec) {
  if (db_table_exists($table)) {
    if (db_column_exists($table, $column)) {
      db_change_field($ret, $table, $column, $new_name, $spec);
    }
  }
}

/* rename variable if it exists, otherwise skip silently */
function search_files_variable_rename_ifexists($name, $new_name) {
  global $conf;
  if ($name != $new_name and isset($conf[$name])) {
    variable_set($new_name, variable_get($name, NULL));
    variable_del($name);
  }
}

function search_files_uninstall() {
  drupal_uninstall_schema('search_files');
  db_query("DELETE FROM {variable} WHERE name LIKE 'search_files_%';");
}


/**
 * automatically detect helper apps and configure them
 *
 * this will only work in *nix systems
 */
function search_files_install_auto_helper_app_configuration() {
  // test for pdftotext
  $location = trim(shell_exec('which pdftotext'));
  if (!strpos('$location', 'no pdftotext')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "PDF", "pdf", $location ." %file% -");
    drupal_set_message(t('Helper app pdftotext has been detected and configured'));
  }
  // test for cat
  $location = trim(shell_exec('which cat'));
  if (!strpos('$location', 'no cat')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "Text files", "txt", $location ." %file%");
    drupal_set_message(t('Helper app cat has been detected and configured'));
  }
  // test for catdoc
  $location = trim(shell_exec('which catdoc'));
  if (!strpos('$location', 'no catdoc')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "Word Documents", "doc", $location ." %file%");
    drupal_set_message(t('Helper app catdoc has been detected and configured'));
  }
  // test for xls2csv
  $location = trim(shell_exec('which xls2csv'));
  if (!strpos('$location', 'no xls2csv')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "Excel files", "xls", $location ." %file%");
    drupal_set_message(t('Helper app xls2csv has been detected and configured'));
  }
  // test for catppt
  $location = trim(shell_exec('which catppt'));
  if (!strpos('$location', 'no catppt')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "Power Point Presentations", "ppt", $location ." %file%");
    drupal_set_message(t('Helper app catppt has been detected and configured'));
  }
  // test for unrtf
  $location = trim(shell_exec('which unrtf'));
  if (!strpos('$location', 'no unrtf')) {
    db_query("INSERT INTO {search_files_helpers} VALUES (NULL, '%s', '%s', '%s');", "Rich Text Format files", "rtf", $location ." %file%");
    drupal_set_message(t('Helper app unrtf has been detected and configured'));
  }
}
