<?php
// $Id: search_files.install,v 1.10.2.7 2009/08/15 16:51:39 thl Exp $

/**
 * @file
 * Installation and update procedures for the search_files module.
 */

function search_files_schema() {
  $schema['search_files_helpers'] = array(
    'description' => t('list of programs that translate the file to test to be indexed'),
    'fields' => array(
      'id' => array('type' => 'serial', 'not null' => TRUE, 'disp-width' => '11'),
      'name' => array('type' => 'varchar', 'length' => '50', 'not null' => FALSE),
      'extension' => array('type' => 'varchar', 'length' => '10', 'not null' => FALSE),
      'helper_path' => array('type' => 'varchar', 'length' => '100', 'not null' => FALSE),
    ),
    'indexes' => array(
      'id' => array('id')
    ),
  );

  return $schema;
}

function search_files_install() {
  $result = drupal_install_schema('search_files');

  $successes = 0;
  $failures= 0;
  $failed = array();
  foreach ($result as $key => $value) {
    if ($value['success']) {
      $successes++;
    }
    else {
      $failures++;
      $failed[] = $value['query'];
    }
  }
  $failed_querys = '';
  if ($failures) {
    $failed_querys .= '<ul>';
    foreach ($failed as $key => $value) {
      $failed_querys .= '<li>'. $value .'</li>';
    }
    $failed_querys = '</ul>';
    watchdog('Search Files', $failures . t('unsuccessful querys while installing: ') . $failed_querys, array(), WATCHDOG_ERROR);
  }

  drupal_set_message(t('Search Files Install <ul><li>Tables successfully created: %successes</li><li>Tables unsuccessfuly created: %failures %failed_querys</li></ul>', array('%successes' => $successes, '%failures' => $failures, '%failed_querys' => ($failures ? $failed_querys : ""))));

  // load sample helper apps into database
  db_query("INSERT INTO {search_files_helpers} VALUES(NULL, '%s', '%s', '%s');", "PDF", "pdf", "/usr/bin/env pdftotext %file% -");
  db_query("INSERT INTO {search_files_helpers} VALUES(NULL, '%s', '%s', '%s');", "Text", "txt", "/usr/bin/env cat %file%");
  //change variable search_cron_limit to 10 so cron doesn't keep timing out
  if (variable_get('search_cron_limit', 100) > 10) {
    variable_set('search_cron_limit', 10);
    drupal_set_message(t('Your search cron limit, which limits the number of items searched per cron run, has been set to 10. If it had been left at the default 100 your cron jobs could potentially continuously timeout. If you want to change this back you can do so <a href="!link">here</a>', array('!link' => url('admin/settings/search'))));
  }
}

/* http://drupal.org/node/114774#update-n
 */
function search_files_update_6200() {
  $ret = array();
  return $ret;
}

function search_files_update_6201() {
  $ret = array();

  /* rename variables */
  search_files_variable_rename_ifexists('search_files_cron_limit', 'search_cron_limit');

  return $ret;
}

/* rename table if it exists, otherwise skip silently */
function search_files_db_rename_table_ifexists(&$ret, $table, $new_name) {
  if (db_table_exists($table)) {
    db_rename_table($ret, $table, $new_name);
  }
}

/* rename column if it exists, otherwise skip silently */
function search_files_db_rename_column_ifexists(&$ret, $table, $column, $new_name, $spec) {
  if (db_table_exists($table)) {
    if (db_column_exists($table, $column)) {
      db_change_field($ret, $table, $column, $new_name, $spec);
    }
  }
}

/* rename variable if it exists, otherwise skip silently */
function search_files_variable_rename_ifexists($name, $new_name) {
  global $conf;
  if ($name != $new_name and isset($conf[$name])) {
    variable_set($new_name, variable_get($name, NULL));
    variable_del($name);
  }
}

function search_files_uninstall() {
  drupal_uninstall_schema('search_files');
  db_query("DELETE FROM {variable} WHERE `name` LIKE 'search_files_%';");
  drupal_set_message(t('Search Files successfully uninstalled.'));
}

